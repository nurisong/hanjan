<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE properties SYSTEM "http://java.sun.com/dtd/properties.dtd">
<!-- 양식을 검사해주는 구문 -->

<properties>

	<entry key="loginMember">
		SELECT 
		        M.USER_NO,
		        USER_ID,
		        USER_PWD,
		        USER_NAME,
		        EMAIL,
		        EMAIL_SITE,
		        PHONE,
		        ENROLL_DATE,
		        USER_STATUS,
		        SUB_STATUS,
		        POINT
		  FROM 
		        MEMBER M, POINT P
		 WHERE 
		        USER_ID = ?
		   AND 
		        USER_PWD = ?
		   AND
		        USER_STATUS != 'N'
		   AND
		   		P.USER_NO = M.USER_NO
	</entry>
	
	<entry key="insertMember">
		INSERT
		  INTO
		        MEMBER
		        (
		        USER_NO,
		        USER_ID,
		        USER_PWD,
		        USER_NAME,
		        PHONE,
		        EMAIL,
		        EMAIL_SITE
		        )
		VALUES 
		        (
		        SEQ_UNO.NEXTVAL,
		        ?,
		        ?,
		        ?,
		        ?,
		        ?,
		        ?
		        )
	</entry>
	
	<entry key="insertPoint">
		INSERT
		  INTO
				POINT
		VALUES
				(
				3000,
				SEQ_UNO.CURRVAL
				)
	</entry>
	
	<entry key="idCheck">
		SELECT
				COUNT(*)
		  FROM
		  		MEMBER
		 WHERE
		 		USER_ID = ?
	</entry>
	
	<entry key="findId">
		SELECT USER_ID
		  FROM MEMBER
		  WHERE USER_NAME = ?
		    AND PHONE = ?
		    AND USER_STATUS = 'Y'
	</entry>
	
	<entry key="findPwd">
		SELECT USER_NO
		  FROM MEMBER
		  WHERE USER_ID = ?
		    AND PHONE = ?
		    AND USER_STATUS = 'Y'
	</entry>
	
	<entry key="updatePwd">
		UPDATE
				MEMBER
		   SET
				USER_PWD = ?
		 WHERE
				USER_NO = ?
	</entry>
	
	<entry key="updateMember">
		UPDATE
				MEMBER
		   SET
		   		USER_NAME = ?,
		   		PHONE = ?,
		   		EMAIL = ?,
		   		EMAIL_SITE = ?
		 WHERE
		 		USER_NO = ?
	</entry>
	
	<entry key="selectMember">
		SELECT
				USER_NO,
				USER_ID,
				USER_PWD,
				USER_NAME,
				EMAIL,
				EMAIL_SITE,
				PHONE,
				ENROLL_DATE,
				USER_STATUS,
				SUB_STATUS
		  FROM
				MEMBER
		 WHERE
		 		USER_NO = ?
	</entry>
	
	<entry key="checkPwd">
		SELECT
				COUNT(*)
		  FROM
		  		MEMBER
		 WHERE 
		 		USER_NO = ?
		   AND
		 		USER_PWD = ?
	</entry>
	
	<entry key="deleteMember">
		UPDATE
				MEMBER
		   SET
		   		USER_STATUS = 'N'
		 WHERE
		 		USER_NO = ?
	</entry>
	
	<entry key="insertShipment">
		INSERT
		  INTO
		  		SHIPMENT
		  		(
		  		SHIP_NO,
		  		USER_NO,
		  		SHIP_NAME,
		  		RECIPIENT,
		  		POSTCODE,
		  		ADDRESS,
		  		DETAIL_ADDRESS,
		  		PHONE,
		  		BASIC_SHIP
		  		)
		VALUES 
				(
				SEQ_SNO.NEXTVAL,
				?,
				?,
				?,
				?,
				?,
				?,
				?,
				?
				)
	</entry>
	
	<entry key="selectShipmentList">
		SELECT
				SHIP_NO,
		  		USER_NO,
		  		SHIP_NAME,
		  		RECIPIENT,
		  		POSTCODE,
		  		ADDRESS,
		  		DETAIL_ADDRESS,
		  		PHONE,
		  		BASIC_SHIP
		  FROM
		  		SHIPMENT
		 WHERE
		 		USER_NO = ?
		 ORDER
		    BY
		    	BASIC_SHIP DESC
	</entry>
	
	<entry key="selectShipment">
		SELECT
				SHIP_NO,
		  		USER_NO,
		  		SHIP_NAME,
		  		RECIPIENT,
		  		POSTCODE,
		  		ADDRESS,
		  		DETAIL_ADDRESS,
		  		PHONE,
		  		BASIC_SHIP
		  FROM
		  		SHIPMENT
		 WHERE
		 		SHIP_NO = ?
	</entry>
	
	<entry key="updateShipment">
		UPDATE
				SHIPMENT
		   SET
		   		SHIP_NAME = ?,
		   		RECIPIENT = ?,
		   		POSTCODE = ?,
		   		ADDRESS = ?,
		   		DETAIL_ADDRESS = ?,
		   		PHONE = ?,
		   		BASIC_SHIP = ?
		 WHERE
		 		SHIP_NO = ?
	</entry>
	
	<entry key="updateBasicShip">
		UPDATE
				SHIPMENT
		   SET
				BASIC_SHIP = 'N'
		 WHERE
				USER_NO = ?
		   AND
				BASIC_SHIP = 'Y'
	</entry>
	
	<entry key="deleteShipment">
		DELETE
		  FROM
				SHIPMENT
		 WHERE
		 		SHIP_NO = ?
	</entry>
	
	
	
	
	<!-- 관리자용 -->
	<entry key="memberManageList">
         		 (  SELECT
                    M.USER_NO,
                    M.USER_ID,
                    M.USER_NAME,
                    M.PHONE,
                    COUNT(O.ORDER_NO)  AS BUY_COUNT,
                    SUM(O.ORDER_PRICE) AS SALE_SUM,
                    P.POINT
                 FROM MEMBER M
                JOIN ORDERS2 O ON O.USER_NO = M.USER_NO
             		 JOIN POINT P ON M.USER_NO = P.USER_NO
                 WHERE M.USER_STATUS = 'Y'
                 GROUP BY M.USER_NO, M.USER_ID, M.USER_NAME, M.PHONE, P.POINT
                 ORDER BY USER_NO ASC)
                WHERE
                    RNUM BETWEEN ? AND ?

	</entry>
	
	
	
	<entry key="memberManageListCount">
	
	  SELECT 
			  	COUNT(*)
	    FROM 
				MEMBER
	
	   WHERE USER_STATUS = 'Y'
		
		
		
		
	</entry>
		<entry key="deleteMemberList">
          SELECT *
            FROM 
	            (SELECT ROWNUM RNUM, A.*
	             FROM
	                (SELECT
	                   M.USER_NO,
	                   M.USER_ID,
	                   M.USER_NAME,
	                   M.PHONE,
	                   COUNT(O.ORDER_NO)  AS BUY_COUNT,
	                   SUM(O.ORDER_PRICE) AS SALE_SUM,
	                   P.POINT
	              	   FROM MEMBER M
	              	   JOIN ORDERS O ON O.USER_NO = M.USER_NO
	              	   JOIN POINT P ON M.USER_NO = P.USER_NO
	             	   WHERE M.USER_STATUS = 'N'
	            	   GROUP BY M.USER_NO, M.USER_ID, M.USER_NAME, M.PHONE, P.POINT
	            	   ORDER BY USER_NO ASC) A)
	            	   WHERE
	                  	 	RNUM BETWEEN ? AND ?
	</entry>
	
	<entry key="deleteMemberListCount">
	
	  SELECT 
			  	COUNT(*)
	    FROM 
				MEMBER
	
		WHERE USER_STATUS = 'N'
		
	</entry>


</properties>